{"version":3,"sources":["assets/observablehq-logo.svg","components/Header/Header.tsx","components/Footer/Footer.tsx","components/Home/Home.tsx","components/ExampleContainer/ExampleContainer.tsx","components/SliderAndBall/SliderAndBall.tsx","components/MalaysiasCovidVaccination/MalaysiasCovidVaccination.tsx","components/D3andCanvas/D3andCanvas.tsx","components/Studio/Studio.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","toolbar","overflowX","borderBottom","palette","divider","toolbarLink","padding","spacing","flexShrink","rightToolbar","margin","marginRight","Header","props","classes","sections","Toolbar","disableGutters","variant","className","map","section","Link","color","url","window","location","pathname","noWrap","href","title","ButtonGroup","size","Button","src","ObservableIcon","alt","Copyright","Typography","Date","getFullYear","root","display","flexDirection","minHeight","main","marginTop","marginBottom","footer","backgroundColor","type","grey","Footer","Container","maxWidth","Home","Grid","container","item","align","Divider","formatDate","date","Intl","DateTimeFormat","dateStyle","format","ExampleContainer","tags","children","Card","CardContent","justify","gutterBottom","CardActions","x","Chip","label","height","width","Ball","useState","setx","y","sety","shuffleXInterval","setShuffleXInterval","shuffleYInterval","setShuffleYInterval","svgRefElement","useRef","useEffect","d3","current","attr","append","selectAll","transition","duration","ease","alignItems","IconButton","onClick","e","clearInterval","setInterval","Math","random","xs","Slider","track","value","min","max","onChange","style","border","borderRadius","borderWidth","borderColor","ref","MalaysiasCovidVaccination","layout","cellsPerRow","D3andCanvasl","number","setNumber","canvasRef","data","colourScale","d","join","enter","i","floor","update","context","getContext","elements","clearRect","each","node","this","fillStyle","fillRect","InputBase","disabled","id","Studio","direction","App","CssBaseline","basename","process","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf2fdb5c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/observablehq-logo.8471f109.svg\";","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Toolbar, Link, Button, ButtonGroup } from \"@material-ui/core\";\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport ObservableIcon from '../../assets/observablehq-logo.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    overflowX: \"auto\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0,\r\n  },\r\n  rightToolbar: {\r\n    margin: \"auto\",\r\n    marginRight: 12\r\n  }\r\n}));\r\n\r\ntype SectionArray = Array<{ title: string; url: string }>;\r\n\r\nexport default function Header(props: { sections: SectionArray }) {\r\n  const classes = useStyles();\r\n  const { sections } = props;\r\n\r\n  return (\r\n    <>\r\n      <Toolbar disableGutters variant=\"dense\" className={classes.toolbar}>\r\n        {sections.map((section) => (\r\n          <Link\r\n            color={\r\n              section.url === window.location.pathname ? \"primary\" : \"inherit\"\r\n            }\r\n            noWrap\r\n            key={section.title}\r\n            variant=\"body2\"\r\n            href={section.url}\r\n            className={classes.toolbarLink}\r\n          >\r\n            {section.title}\r\n          </Link>\r\n        ))}\r\n        <section className={classes.rightToolbar}>\r\n          <ButtonGroup variant=\"text\" size=\"small\" aria-label=\"small outlined button group\">\r\n            <Button href=\"https://observablehq.com/@minimumness\"><img src={ObservableIcon} alt=\"\"/></Button>\r\n            <Button href=\"https://github.com/ministrudels\"><GitHubIcon /></Button>\r\n            <Button href=\"https://www.linkedin.com/in/huanmingan/\"><LinkedInIcon /></Button>\r\n          </ButtonGroup>\r\n        </section>\r\n      </Toolbar>\r\n    </>\r\n  );\r\n}\r\n","import Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\">\r\n        Huan Min Gan\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"sm\">\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Typography, Grid, Divider} from '@material-ui/core';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Grid container spacing={8}>\r\n      <Grid item>\r\n\r\n      </Grid>\r\n      <Grid item>\r\n        <Typography align=\"justify\" variant='body1'>\r\n          Hi, my name is Huan Min and I'm a software engineer based in London with an interest in data visualisation, data engineering and infrastructure technology.\r\n          I graduated from Imperial College London with a Distinction in MSc Computing Science in 2019, and from University College London with a 1st class honours in MEng Mechanical Engineering in 2018.\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Typography align=\"justify\" variant='h6'>\r\n          Other Projects\r\n        </Typography>\r\n        <Divider/>\r\n        <Typography align=\"justify\" variant='subtitle2'>\r\n          Some cool things I've done!\r\n        </Typography>\r\n        \r\n        <Typography variant='body1'>\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://github.com/ministrudels/JamCam-Detector\">JamCam Detector</a>:\r\n              A scalable object detection system applied to London's traffic camera network. <a href=\"http://doi.org/10.1016/j.eswa.2021.115154\">Publication</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/ministrudels/my-travel-history\">My travel history</a>: A simple tool to extract your travel history using Google Map's location history.\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/checo193/FloppyDons\">UCL Room finder</a>: Find unbooked rooms near you in UCL.\r\n            </li>\r\n          </ul>\r\n        </Typography>\r\n\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n","import {\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    Chip,\r\n    CardActions,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n    title: string;\r\n    date: Date;\r\n    description?: string;\r\n    children: ReactNode;\r\n    tags?: Array<string>;\r\n}\r\n\r\nconst formatDate = (date: Date): string => {\r\n    return new Intl.DateTimeFormat('en-GB', { dateStyle: 'long' }).format(date)\r\n}\r\n\r\nexport default function ExampleContainer(props: Props) {\r\n    const { title, date, tags, children } = props\r\n    return (\r\n        <Card variant=\"outlined\">\r\n            <CardContent>\r\n                <Grid container justify='space-between'>\r\n                    <Grid item>\r\n                        <Typography gutterBottom variant='h5'>\r\n                            {title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography color='textSecondary'>\r\n                            {formatDate(date)}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                {children}\r\n            </CardContent>\r\n            <CardActions>\r\n                {tags?.map(x => <Chip key={x} label={x} />)}\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport { Grid, Slider, Typography, IconButton } from '@material-ui/core'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\r\nimport PauseIcon from '@material-ui/icons/Pause'\r\nimport ExampleContainer from '../ExampleContainer'\r\nimport * as d3 from 'd3'\r\n\r\nconst margin = 10\r\nconst height = 200\r\nconst width = 200\r\n\r\nexport default function Ball() {\r\n    const [x, setx] = useState(0)\r\n    const [y, sety] = useState(0)\r\n    const [shuffleXInterval, setShuffleXInterval] = useState<null | number>(null)\r\n    const [shuffleYInterval, setShuffleYInterval] = useState<null | number>(null)\r\n    const svgRefElement = useRef(null);\r\n\r\n    const handleXChange = (e: React.ChangeEvent<{}>, value: number | number[]) => {\r\n        if (shuffleXInterval) {\r\n            clearInterval(shuffleXInterval)\r\n            setShuffleXInterval(null)\r\n        }\r\n        setx(value as number)\r\n    }\r\n\r\n    const handleYChange = (e: React.ChangeEvent<{}>, value: number | number[]) => {\r\n        if (shuffleYInterval) {\r\n            clearInterval(shuffleYInterval)\r\n            setShuffleXInterval(null)\r\n        }\r\n        sety(value as number)\r\n    }\r\n\r\n    const handleShuffleClickX: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        if (shuffleXInterval) {\r\n            clearInterval(shuffleXInterval)\r\n            setShuffleXInterval(null)\r\n        } else {\r\n            setShuffleXInterval(window.setInterval(() => setx(Math.random() * (width - 2 * margin + 1)), 2000))\r\n        }\r\n    }\r\n\r\n    const handleShuffleClickY: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        if (shuffleYInterval) {\r\n            clearInterval(shuffleYInterval)\r\n            setShuffleYInterval(null)\r\n        } else {\r\n            setShuffleYInterval(window.setInterval(() => sety(Math.random() * (height - 2 * margin + 1)), 2000))\r\n        }\r\n    }\r\n\r\n    const moveCircle = () => {\r\n        d3.select(svgRefElement.current)\r\n            .selectAll('circle')\r\n            .transition()\r\n            .duration(1000)\r\n            .ease(d3.easeCubicInOut)\r\n            .attr(\"cx\", x)\r\n            .attr(\"cy\", y)\r\n    }\r\n\r\n    const draw = () => {\r\n        const rootSVG = d3.select(svgRefElement.current).attr(\"viewBox\", `${[0, 0, width, height]}`)\r\n        const g = rootSVG.append('g')\r\n            .attr('transform', `translate(${margin},${margin})`)\r\n        g.append('circle')\r\n            .attr('r', margin)\r\n    }\r\n\r\n    useEffect(draw, [])\r\n    useEffect(moveCircle, [x, y])\r\n\r\n    return (\r\n        <ExampleContainer title='Slider and Ball' date={new Date('6 28 2021')} tags={['d3', 'd3-transition', 'setInterval']}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant='body1'>\r\n                        X Pos\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <IconButton onClick={handleShuffleClickX}>\r\n                        {shuffleXInterval\r\n                            ? <PauseIcon />\r\n                            : <PlayArrowIcon />\r\n                        }\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Slider\r\n                        track={false}\r\n                        value={x}\r\n                        min={0}\r\n                        max={width - 2 * margin}\r\n                        onChange={handleXChange}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant='body1'>\r\n                        Y Pos\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <IconButton onClick={handleShuffleClickY}>\r\n                        {shuffleYInterval\r\n                            ? <PauseIcon />\r\n                            : <PlayArrowIcon />\r\n                        }\r\n                    </IconButton>\r\n                </Grid>\r\n\r\n                <Grid item xs>\r\n                    <Slider\r\n                        track={false}\r\n                        value={y}\r\n                        min={0}\r\n                        max={height - 2 * margin}\r\n                        onChange={handleYChange}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <div style={{\r\n                height: height,\r\n                width: width,\r\n                border: 'solid',\r\n                borderRadius: 2,\r\n                borderWidth: 1,\r\n                borderColor: 'gray',\r\n                display: 'block',\r\n                margin: 'auto'\r\n            }}>\r\n                <svg\r\n                    width='100%'\r\n                    height='100%'\r\n                    ref={svgRefElement}\r\n                />\r\n            </div>\r\n        </ExampleContainer>\r\n    )\r\n}","import ExampleContainer from '../ExampleContainer'\r\n\r\nexport default function MalaysiasCovidVaccination() {\r\n    return (\r\n        <ExampleContainer title=\"Malaysia's COVID Vaccination\" date={new Date('7 6 2021')} tags={['d3', 'observablehq']}>\r\n            <iframe title=\"Malaysia's Covid Vaccination\" width=\"100%\" height=\"1313\" style={{ border: \"none\" }}\r\n                src=\"https://observablehq.com/embed/@minimumness/malaysias-covid-vaccination-progress?cells=description%2Ctitle1%2Ckey%2Cviewof+selectedData%2Ctitle2%2CbyState\">\r\n            </iframe>\r\n        </ExampleContainer>\r\n    )\r\n}","import React, { useState, useEffect, useRef, RefObject } from \"react\";\r\nimport ExampleContainer from \"../ExampleContainer\";\r\nimport * as d3 from \"d3\";\r\nimport { Divider, Input, InputBase, Slider, TextField, Typography } from \"@material-ui/core\";\r\n\r\nconst height = 400;\r\nconst width = 600;\r\nconst layout = {\r\n  cellSpacing: 1,\r\n  cellSize: 3,\r\n};\r\nconst cellsPerRow = width / (layout.cellSize + layout.cellSpacing)\r\n\r\nexport default function D3andCanvasl() {\r\n  const [number, setNumber] = useState(12000);\r\n  const canvasRef: RefObject<HTMLCanvasElement> = useRef(null);\r\n\r\n  const redrawCanvas = () => {\r\n    const data = d3.range(number);\r\n    const colourScale = d3.scaleSequential(d3.extent(data) as [number, number], d3.interpolateSpectral)\r\n    // First we bind the new data to our custom DOM element\r\n    d3.select(`custom`)\r\n      .selectAll(\".rect\")\r\n      .data(data, (d) => `${d}`)\r\n      .join((enter) =>\r\n        enter\r\n          .append(\"custom\")\r\n          .attr(\"class\", \"rect\")\r\n          .attr(\r\n            \"x\",\r\n            (d, i) => (i % cellsPerRow) * (layout.cellSize + layout.cellSpacing)\r\n          )\r\n          .attr(\r\n            \"y\",\r\n            (d, i) =>\r\n              Math.floor(i / cellsPerRow) * (layout.cellSize + layout.cellSpacing)\r\n          )\r\n          .attr(\"width\", (d, i) => layout.cellSize)\r\n          .attr(\"height\", (d, i) => layout.cellSize)\r\n          .attr(\"fillStyle\", (d) => colourScale(d)),\r\n        (update) => update.attr(\"fillStyle\", (d) => colourScale(d)),\r\n      );\r\n\r\n    const context = canvasRef.current?.getContext(\"2d\")!;\r\n    const elements = d3.selectAll(\"custom.rect\");\r\n    context.clearRect(0, 0, width, height)\r\n    elements.each(function (d, i) {\r\n      // This is each individual element in the loop.\r\n      let node = d3.select(this);\r\n      context.fillStyle = node.attr(\"fillStyle\");\r\n      context.fillRect(\r\n        +node.attr(\"x\"),\r\n        +node.attr(\"y\"),\r\n        +node.attr(\"width\"),\r\n        +node.attr(\"height\")\r\n      );\r\n    });\r\n  };\r\n\r\n  const initialiseCustom = () => {\r\n    d3.select('#canvasContainer').append(\"custom\")\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<{}>, value: number | number[]) => {\r\n    setNumber(+value);\r\n  };\r\n\r\n  useEffect(initialiseCustom, []);\r\n  useEffect(redrawCanvas, [number]);\r\n\r\n  return (\r\n    <ExampleContainer\r\n      title=\"D3 and Canvas\"\r\n      date={new Date()}\r\n      tags={[\"d3\", \"canvas\"]}\r\n    >\r\n      <Typography variant=\"body1\" align=\"justify\">\r\n        I've been using d3 and SVG for about a year and a half now to facilitate\r\n        data exploration. Data exploration in essence is about uncover patterns,\r\n        characteristics, and points of interest in a given dataset. This process\r\n        helps create a broad picture of important trends and major points to\r\n        study in greater detail. In order to facilitate greater user driven\r\n        exploration of a given data set, interactive elements are then provided\r\n        to users to \"slice and dice\" the data down to a smaller subset, and\r\n        render a visualisation off of it.\r\n        <br />\r\n        <br />\r\n        In most cases, a subset which is large enough to affect browser\r\n        performance using svgs is also information overload for the user. But\r\n        what if it isnt? What if one day, there is an awesome visualisation of a\r\n        huge dataset which is logical for a user to view, yet svgs just cant\r\n        keep up?\r\n        <br />\r\n        <br />\r\n        This studio example is uses D3's data bind model to drive visualisations\r\n        onto HTML5's performant canvas element.\r\n      </Typography>\r\n      {/* <TextField\r\n        label=\"Number\"\r\n        type=\"number\"\r\n        variant='outlined'\r\n        disabled\r\n        value={number}\r\n        onChange={handleChange}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n       */}\r\n      <Divider />\r\n      <br />\r\n      <InputBase\r\n        value={number}\r\n        disabled\r\n      />\r\n      <Slider\r\n        value={number}\r\n        min={0}\r\n        max={15000}\r\n        onChange={handleChange}\r\n      />\r\n      <div style={{\r\n        height: height,\r\n        width: width + 1,\r\n        border: 'solid',\r\n        borderRadius: 2,\r\n        borderWidth: 1,\r\n        borderColor: 'gray',\r\n        display: 'block',\r\n        margin: '10px auto',\r\n      }} id=\"canvasContainer\">\r\n        <canvas width={width} height={height} ref={canvasRef}></canvas>\r\n      </div>\r\n    </ExampleContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport SliderAndBall from '../SliderAndBall';\r\nimport MalaysiasCovidVaccination from '../MalaysiasCovidVaccination'\r\nimport D3andCanvas from '../D3andCanvas'\r\nexport default function Studio() {\r\n\r\n  return (\r\n    <Grid container spacing={4} direction='column'>\r\n      \r\n      <Grid item>\r\n        <Typography variant='body1' gutterBottom>\r\n          Below are some sandbox examples to demonstrate some front-end concepts. Each example is tagged with a technology/concept it demonstrates.\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <D3andCanvas/>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <MalaysiasCovidVaccination />\r\n      </Grid>\r\n      \r\n      <Grid item>\r\n        <SliderAndBall />\r\n      </Grid>\r\n    \r\n    </Grid>\r\n  );\r\n}\r\n\r\n","import {BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Home from './components/Home';\r\nimport Studio from './components/Studio';\r\n\r\nconst sections = [\r\n  { title: 'Home', url: '/home' },\r\n  { title: 'Studio', url: '/studio' }\r\n];\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n        <Header sections={sections} />\r\n        <main>\r\n          <Router basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n              <Route path='/home' component={Home} />\r\n              <Route path='/Studio' component={Studio} />\r\n               <Route path='/' component={Home} />\r\n            </Switch>\r\n          </Router>\r\n        </main>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}