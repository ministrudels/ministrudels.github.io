{"version":3,"sources":["components/Header/Header.tsx","components/Footer/Footer.tsx","components/Home/Home.tsx","components/ExampleContainer/ExampleContainer.tsx","components/Ball/Ball.tsx","components/Sandbox/Sandbox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","toolbar","overflowX","borderBottom","palette","divider","toolbarLink","padding","spacing","flexShrink","rightToolbar","margin","marginRight","Header","props","classes","sections","Toolbar","disableGutters","variant","className","map","section","Link","color","url","window","location","pathname","noWrap","href","title","ButtonGroup","size","Button","Copyright","Typography","Date","getFullYear","root","display","flexDirection","minHeight","main","marginTop","marginBottom","footer","backgroundColor","type","grey","Footer","Container","maxWidth","Home","align","ExampleContainer","children","tags","Card","CardContent","CardActions","x","Chip","label","height","width","Ball","useState","setx","y","sety","shuffleXInterval","setShuffleXInterval","shuffleYInterval","setShuffleYInterval","svgRefElement","useRef","useEffect","d3","current","attr","append","selectAll","transition","duration","ease","Grid","container","alignItems","item","IconButton","onClick","e","clearInterval","setInterval","Math","random","xs","Slider","track","value","min","max","onChange","style","border","borderRadius","borderWidth","borderColor","ref","Sandbox","direction","gutterBottom","App","CssBaseline","basename","process","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77964a67.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nimport { Toolbar, Link, Button, ButtonGroup } from \"@material-ui/core\";\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    overflowX: \"auto\",\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n  rightToolbar: {\n    margin: \"auto\",\n    marginRight: 12\n  }\n}));\n\ntype SectionArray = Array<{ title: string; url: string }>;\n\nexport default function Header(props: { sections: SectionArray }) {\n  const classes = useStyles();\n  const { sections } = props;\n  return (\n    <>\n      <Toolbar disableGutters variant=\"dense\" className={classes.toolbar}>\n        {sections.map((section) => (\n          <Link\n            color={\n              section.url === window.location.pathname ? \"primary\" : \"inherit\"\n            }\n            noWrap\n            key={section.title}\n            variant=\"body2\"\n            href={section.url}\n            className={classes.toolbarLink}\n          >\n            {section.title}\n          </Link>\n        ))}\n        <section className={classes.rightToolbar}>\n          <ButtonGroup variant=\"text\" size=\"small\" aria-label=\"small outlined button group\">\n            <Button href=\"https://github.com/ministrudels\"><GitHubIcon /></Button>\n            <Button href=\"https://www.linkedin.com/in/huan-min-gan-b9801210a/\"><LinkedInIcon /></Button>\n          </ButtonGroup>\n        </section>\n      </Toolbar>\n    </>\n  );\n}\n","import Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\">\n        Huan Min Gan\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}","import React from 'react';\nimport { Typography } from '@material-ui/core'\n\nexport default function Home() {\n  return (\n    <>\n      <Typography align=\"justify\" variant='body1'>\n        Hi, my name is Huan Min and I'm a passionate software engineer based in London with an interest in data visualisation, data engineering and infrastructure technology.\n        I graduated from Imperial College London with a Distinction in MSc Computing Science in 2019, and from University College London with a 1st class honours in MEng Mechanical Engineering in 2018.\n      </Typography>\n    </>\n  );\n}\n\n","import {\n    Card,\n    CardContent,\n    Chip,\n    CardActions\n} from \"@material-ui/core\";\nimport { ReactNode } from \"react\";\n\ntype Props  = {\n    children: ReactNode;\n    tags: Array<string>;\n}\n\nexport default function ExampleContainer(props:Props){\n    const {children, tags} = props\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n                {children}\n            </CardContent>\n            <CardActions>\n                {tags.map(x => <Chip key={x} label={x} />)}\n            </CardActions>\n        </Card>\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Grid, Slider, Typography, IconButton } from '@material-ui/core'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport PauseIcon from '@material-ui/icons/Pause'\nimport ExampleContainer from '../ExampleContainer'\nimport * as d3 from 'd3'\n\nconst margin = 10\nconst height = 200\nconst width = 200\n\n// If I change my component based off state, then it can do transitions and shit\nexport default function Ball() {\n    const [x, setx] = useState(0)\n    const [y, sety] = useState(0)\n    const [shuffleXInterval, setShuffleXInterval] = useState<null | number>(null)\n    const [shuffleYInterval, setShuffleYInterval] = useState<null | number>(null)\n    const svgRefElement = useRef(null);\n\n    const handleXChange = (e: React.ChangeEvent<{}>, value: number | number[]) => {\n        if (shuffleXInterval) {\n            clearInterval(shuffleXInterval)\n            setShuffleXInterval(null)\n        }\n        setx(value as number)\n    }\n\n    const handleYChange = (e: React.ChangeEvent<{}>, value: number | number[]) => {\n        if (shuffleYInterval) {\n            clearInterval(shuffleYInterval)\n            setShuffleXInterval(null)\n        }\n        sety(value as number)\n    }\n\n    const handleShuffleClickX: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n        if (shuffleXInterval) {\n            clearInterval(shuffleXInterval)\n            setShuffleXInterval(null)\n        } else {\n            setShuffleXInterval(window.setInterval(() => setx(Math.random() * (width - 2 * margin + 1)), 2000))\n        }\n    }\n\n    const handleShuffleClickY: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n        if (shuffleYInterval) {\n            clearInterval(shuffleYInterval)\n            setShuffleYInterval(null)\n        } else {\n            setShuffleYInterval(window.setInterval(() => sety(Math.random() * (height - 2 * margin + 1)), 2000))\n        }\n    }\n\n    const moveCircle = () => {\n        d3.select(svgRefElement.current)\n            .selectAll('circle')\n            .transition()\n            .duration(1000)\n            .ease(d3.easeCubicInOut)\n            .attr(\"cx\", x)\n            .attr(\"cy\", y)\n    }\n\n    const draw = () => {\n        const rootSVG = d3.select(svgRefElement.current).attr(\"viewBox\", `${[0, 0, width, height]}`)\n        const g = rootSVG.append('g')\n            .attr('transform', `translate(${margin},${margin})`)\n        g.append('circle')\n            .attr('r', margin)\n    }\n\n    useEffect(draw, [])\n    useEffect(moveCircle, [x, y])\n\n    return (\n        <ExampleContainer tags={['d3', 'd3-transition', 'setInterval']}>\n            <Grid container spacing={2} alignItems=\"center\">\n                <Grid item>\n                    <Typography variant='body1'>\n                        X Pos\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <IconButton onClick={handleShuffleClickX}>\n                        {shuffleXInterval\n                            ? <PauseIcon />\n                            : <PlayArrowIcon />\n                        }\n                    </IconButton>\n                </Grid>\n                <Grid item xs>\n                    <Slider\n                        track={false}\n                        value={x}\n                        min={0}\n                        max={width - 2 * margin}\n                        onChange={handleXChange}\n                    />\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={2} alignItems=\"center\">\n                <Grid item>\n                    <Typography variant='body1'>\n                        Y Pos\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <IconButton onClick={handleShuffleClickY}>\n                        {shuffleYInterval\n                            ? <PauseIcon />\n                            : <PlayArrowIcon />\n                        }\n                    </IconButton>\n                </Grid>\n\n                <Grid item xs>\n                    <Slider\n                        track={false}\n                        value={y}\n                        min={0}\n                        max={height - 2 * margin}\n                        onChange={handleYChange}\n                    />\n                </Grid>\n            </Grid>\n\n            <div style={{\n                height: height,\n                width: width,\n                border: 'solid',\n                borderRadius: 2,\n                borderWidth: 1,\n                borderColor: 'gray',\n                display: 'block',\n                margin: 'auto'\n            }}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    ref={svgRefElement}\n                />\n            </div>\n        </ExampleContainer>\n    )\n}","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport Ball from '../Ball';\n\nexport default function Sandbox() {\n\n  return (\n    <Grid container spacing={1} direction='column'>\n      <Grid item>\n        <Typography variant='body1' gutterBottom>\n          Below are some sandbox examples to demonstrate some front-end concepts. Each example is tagged with a technology/concept it demonstrates.\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Ball />\n      </Grid>\n\n      {/* Other ideas\n      Moving chart according to time series - tags - d3, d3.transition\n      Traffic patterns in London - tags - geospatial, tags - d3, d3.transition, observable\n      HTML5 canvas and d3 - tags - canvas, d3\n      Websocket app\n       */}\n    </Grid>\n  );\n}\n\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport Sandbox from './components/Sandbox';\n\nconst sections = [\n  { title: 'Home', url: '/home' },\n  { title: 'Sandbox', url: '/sandbox' }\n];\n\nexport default function App() {\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Header sections={sections} />\n        <main>\n          <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n              <Route path='/home' component={Home} />\n              <Route path='/sandbox' component={Sandbox} />\n               <Route path='/' component={Home} />\n            </Switch>\n          </Router>\n        </main>\n      </Container>\n      <Footer />\n    </>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}